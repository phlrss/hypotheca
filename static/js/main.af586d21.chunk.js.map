{"version":3,"sources":["components/Header.jsx","services/resultsService.js","components/Questionnaire.jsx","components/ResultsTable.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","roundToDecimals","num","Math","round","toFixed","PMT","rate","nper","pv","fv","type","pvif","pow","pmt","initialState","mortgageAmount","interestRate","amortization","lumpSum","lumpSumAmount","startDate","stepNum","error","errorMessage","stateMap","0","1","2","3","4","5","reducer","state","action","mortgage","interest","includes","message","prevStep","nextStep","Error","Questionnaire","setResultsTable","useReducer","dispatch","required","placeholder","value","onChange","ev","target","id","checked","name","disabled","onClick","cn","parseInt","validateValue","results","resultsTable","lumpSumInt","period","i","openingBalance","endingBalance","schedPMT","min","totalPMT","principal","max","push","generateResultsTable","ResultsTable","map","row","index","key","Number","toLocaleString","split","App","useState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.af586d21.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n  return (\n    <div className=\"w-screen h-16 bg-green-600 text-white flex items-center p-4 shadow\">\n      <span className='text-lg font-bold uppercase'>Hypotheca.io</span>\n    </div>\n  )\n}\n\nexport default Header\n","/* eslint-disable eqeqeq */\nexport const generateResultsTable = results => {\n  const resultsTable = []\n  const { mortgageAmount, interestRate, amortization, lumpSumAmount } = results\n  let lumpSumInt = 0;\n  if (lumpSumAmount) {\n    lumpSumInt = parseInt(lumpSumAmount)\n  }\n\n  const period = amortization * 26\n  const rate = Math.pow((1+((interestRate/100)/2)),(2/26))-1\n\n  for (let i = 0; i < period; i++) {\n    const openingBalance = i === 0 ? parseInt(mortgageAmount) : resultsTable[i - 1].endingBalance\n    const interest = openingBalance * rate\n    const schedPMT = Math.min(-1 * PMT((Math.pow(((interestRate/100/2)+1), 1/6) - 1)*12/26, period, mortgageAmount), openingBalance)\n    const totalPMT = schedPMT + lumpSumInt\n    const principal = Math.max(schedPMT - interest + lumpSumInt, 0)\n    const endingBalance = Math.max(openingBalance - principal, 0)\n\n    if(openingBalance <= 0) {\n      break;\n    }\n\n    resultsTable.push({\n      openingBalance: roundToDecimals(openingBalance),\n      schedPMT: roundToDecimals(schedPMT),\n      lumpSumAmount: roundToDecimals(lumpSumAmount),\n      totalPMT: roundToDecimals(totalPMT),\n      principal: roundToDecimals(principal),\n      interest: roundToDecimals(interest),\n      endingBalance: roundToDecimals(endingBalance)\n    })\n  }\n\n  return resultsTable\n}\n\nconst roundToDecimals = (num) => {\n  return (Math.round(num*100)/100).toFixed(2)\n}\n\nconst PMT = (rate, nper, pv, fv, type) => {\n  if (!fv) fv = 0;\n  if (!type) type = 0;\n\n  if (rate == 0) return -(pv + fv)/nper;\n\n  var pvif = Math.pow(1 + rate, nper);\n  var pmt = rate / (pvif - 1) * -(pv * pvif + fv);\n\n  if (type == 1) {\n    pmt /= (1 + rate);\n  };\n\n  return pmt;\n}\n","import React, { useReducer } from 'react'\nimport cn from 'classnames'\nimport { generateResultsTable } from '../services/resultsService';\n\nconst initialState = {\n  mortgageAmount: '',\n  interestRate: '',\n  amortization: '',\n  lumpSum: false,\n  lumpSumAmount: '',\n  startDate: '',\n  stepNum: 0,\n  error: false,\n  errorMessage: ''\n};\n\nconst stateMap = {\n  0: 'mortgageAmount',\n  1: 'interestRate',\n  2: 'amortization',\n  3: 'lumpSum',\n  4: 'lumpSumAmount',\n  5: 'startDate'\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_MORTGAGE':\n      return {\n        ...state,\n        mortgageAmount: action.mortgage,\n        error: false\n      }\n    case 'UPDATE_INTEREST':\n      return {\n        ...state,\n        interestRate: action.interest,\n        error: false\n      }\n    case 'UPDATE_AMORTIZATION':\n      return {\n        ...state,\n        amortization: action.amortization,\n        error: false\n      }\n    case 'UPDATE_LUMP_SUM':\n      return {\n        ...state,\n        lumpSum: [true, 'true'].includes(action.lumpSum),\n        error: false\n      }\n    case 'UPDATE_LUMP_AMOUNT':\n      return {\n        ...state,\n        lumpSumAmount: action.lumpSumAmount,\n        error: false\n      }\n    case 'ERROR_STATE': {\n      return {\n        ...state,\n        error: true,\n        errorMessage: action.message\n      }\n    }\n    case 'PREV_STEP':\n      let prevStep = state.stepNum - 1\n      if (state.stepNum === 5 && !state.lumpSum) {\n        prevStep = 3\n      } else if (state.stepNum === 0) {\n        prevStep = state.stepNum\n      }\n      return {\n        ...state,\n        stepNum: prevStep,\n        error: false\n      }\n    case 'NEXT_STEP':\n      let nextStep = state.stepNum + 1\n      if (state.stepNum === 3 && !state.lumpSum) {\n        nextStep = 5\n      } else if (state.stepNum === 4) {\n        nextStep = state.stepNum\n      }\n      return {\n        ...state,\n        stepNum: nextStep\n      }\n    default:\n      throw new Error();\n  }\n}\n\nconst Questionnaire = ({ setResultsTable }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const validateValue = () => {\n    const value = state[stateMap[state.stepNum]]\n\n    if (!value && state.stepNum !== 3) {\n      dispatch({ type: 'ERROR_STATE', message: 'Value is required' })\n    }\n    else if (!parseInt(value) && state.stepNum !== 3) {\n      dispatch({ type: 'ERROR_STATE', message: 'Invalid symbols in field' })\n    } else {\n      dispatch({ type: 'NEXT_STEP' })\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col w-full max-w-xl\">\n      <span className=\"mt-5 mb-2 font-bold text-gray-700\">Just answer a few simple questions:</span>\n      <div className=\"p-5 bg-white rounded flex flex-col shadow-md w-full\">\n        {state.stepNum === 0 && <div className=\"mb-3\">\n          <label className=\"block text-gray-600 text-sm font-bold mb-2\">\n            What is your mortgage amount?\n          </label>\n          <input\n            required\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n            placeholder=\"$200000\"\n            value={state.mortgageAmount}\n            onChange={ev => dispatch({ type: 'UPDATE_MORTGAGE', mortgage: ev.target.value })}\n            />\n        </div>}\n        {state.stepNum === 1 && <div className=\"mb-3\">\n          <label className=\"block text-gray-600 text-sm font-bold mb-2\">\n            What is your stated interest rate?\n          </label>\n          <input\n            required\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n            placeholder=\"2.25%\"\n            value={state.interestRate}\n            onChange={ev => dispatch({ type: 'UPDATE_INTEREST', interest: ev.target.value })}\n            />\n        </div>}\n        {state.stepNum === 2 && <div className=\"mb-3\">\n          <label className=\"block text-gray-600 text-sm font-bold mb-2\">\n            What is your mortgage amortization term (in years)?\n          </label>\n          <input\n            required\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n            placeholder=\"25\"\n            value={state.amortization}\n            onChange={ev => dispatch({ type: 'UPDATE_AMORTIZATION', amortization: ev.target.value })}\n            />\n        </div>}\n        {state.stepNum === 3 && <div className=\"mb-3\">\n          <label className=\"block text-gray-600 text-sm font-bold mb-2\">\n            Will you be making additional lump-sum payments?\n          </label>\n          <div>\n            <label className=\"text-gray-700 mr-5 font-bold inline-flex items-center\">\n              No\n              <input\n                id=\"check-no\"\n                onChange={ev => {\n                  if (ev.target.checked) {\n                    dispatch({ type: 'UPDATE_LUMP_SUM', lumpSum: ev.target.value })\n                  }\n                }}\n                value=\"false\"\n                className=\"ml-1\"\n                type=\"radio\"\n                name=\"lumpsum\" />\n            </label>\n            <label className=\"text-gray-700 mr-5 font-bold inline-flex items-center\">\n              Yes\n              <input\n                id=\"check-yes\"\n                onChange={ev => {\n                  if (ev.target.checked) {\n                    dispatch({ type: 'UPDATE_LUMP_SUM', lumpSum: ev.target.value })\n                  }\n                }}\n                value=\"true\"\n                className=\"ml-1\"\n                type=\"radio\"\n                name=\"lumpsum\" />\n            </label>\n          </div>\n        </div>}\n        {state.stepNum === 4 && <div className=\"mb-3\">\n          <label className=\"block text-gray-600 text-sm font-bold mb-2\">\n            What is the additional lump-sum amount per regularly scheduled payment?\n          </label>\n          <input\n            required\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n            placeholder=\"$250\"\n            value={state.lumpSumAmount}\n            onChange={ev => dispatch({ type: 'UPDATE_LUMP_AMOUNT', lumpSumAmount: ev.target.value })}\n            />\n        </div>}\n        { state.error && <label className=\"text-sm text-red-600 font-bold mb-3\">*{state.errorMessage}</label> }\n        <div className=\"w-full flex justify-between\">\n          <button\n            disabled={state.stepNum === 0}\n            onClick={() => dispatch({ type: 'PREV_STEP' })}\n            className={cn(\n              'bg-gray-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline',\n              {\n                'cursor-not-allowed opacity-50': state.stepNum === 0\n              })}>\n              Previous\n          </button>\n          {state.stepNum !== 4 && !(state.stepNum === 3 && !state.lumpSum) && <button\n            disabled={state.stepNum === 4 || (state.stepNum === 3 && !state.lumpSum) || state.error}\n            onClick={() => validateValue()}\n            className=\"bg-green-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">\n              Next\n          </button>}\n          {(state.stepNum === 4 || (state.stepNum === 3 && !state.lumpSum)) && <button\n            onClick={() => setResultsTable(generateResultsTable(state))}\n            className=\"bg-green-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">\n              Finish\n          </button>}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Questionnaire\n","import React from 'react'\n\nconst ResultsTable = ({ resultsTable }) => {\n  if (!resultsTable) {\n    return null\n  }\n\n  return (\n    <table className=\"table-auto\">\n      <thead>\n        <tr className=\"bg-white\">\n          <th className=\"px-4 py-2\">Payment Number</th>\n          <th className=\"px-4 py-2\">Opening Balance</th>\n          <th className=\"px-4 py-2\">Scheduled PMT</th>\n          <th className=\"px-4 py-2\">Lump Sum</th>\n          <th className=\"px-4 py-2\">Total PMT</th>\n          <th className=\"px-4 py-2\">Principal</th>\n          <th className=\"px-4 py-2\">Interest</th>\n          <th className=\"px-4 py-2\">Ending Balance</th>\n        </tr>\n      </thead>\n      <tbody>\n        {resultsTable.map((row, index) => (\n          <tr key={index} className={(index + 1) % 2 === 0 ? 'bg-white hover:bg-blue-100 transition-all' : 'bg-gray-100 hover:bg-blue-100 transition-all'}>\n            <td className=\"border px-4 py-2\">{index + 1}</td>\n            <td className=\"border px-4 py-2 text-right\">${Number(row.openingBalance).toLocaleString().split('.')[0]}</td>\n            <td className=\"border px-4 py-2 text-right\">${Number(row.schedPMT).toLocaleString().split('.')[0]}</td>\n            <td className=\"border px-4 py-2 text-right\">${Number(row.lumpSumAmount).toLocaleString().split('.')[0]}</td>\n            <td className=\"border px-4 py-2 text-right\">${Number(row.totalPMT).toLocaleString().split('.')[0]}</td>\n            <td className=\"border px-4 py-2 text-right\">${Number(row.principal).toLocaleString().split('.')[0]}</td>\n            <td className=\"border px-4 py-2 text-right\">${Number(row.interest).toLocaleString().split('.')[0]}</td>\n            <td className=\"border px-4 py-2 text-right\">${Number(row.endingBalance).toLocaleString().split('.')[0]}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nexport default ResultsTable\n","import React, { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Questionnaire from './components/Questionnaire';\nimport ResultsTable from './components/ResultsTable';\n\nfunction App() {\n  const [resultsTable, setResultsTable] = useState()\n  return (\n    <div className=\"flex flex-col\">\n      <Header />\n      <div className=\"flex items-center justify-center\">\n        {!resultsTable && <Questionnaire setResultsTable={setResultsTable} />}\n        {resultsTable && <ResultsTable resultsTable={resultsTable} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './tailwind.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}